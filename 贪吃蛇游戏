<!DOCTYPE html>
<html lang="zh - CN">

<head>
    <meta charset="UTF - 8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>贪吃蛇游戏</title>
    <style>
        #game-board {
            border: 1px solid black;
        }
    </style>
</head>

<body>
    <canvas id="game-board" width="400" height="400"></canvas>
    <script>
        const canvas = document.getElementById('game-board');
        const ctx = canvas.getContext('2d');

        const cellSize = 20;
        let snake = [{ x: 100, y: 100 }, { x: 80, y: 100 }, { x: 60, y: 100 }];
        let direction = 'right';
        let food = { x: Math.floor(Math.random() * (canvas.width / cellSize)) * cellSize, y: Math.floor(Math.random() * (canvas.height / cellSize)) * cellSize };

        function drawSnake() {
            ctx.fillStyle = 'green';
            snake.forEach(segment => {
                ctx.fillRect(segment.x, segment.y, cellSize, cellSize);
            });
        }

        function drawFood() {
            ctx.fillStyle ='red';
            ctx.fillRect(food.x, food.y, cellSize, cellSize);
        }

        function moveSnake() {
            let head = {...snake[0] };
            switch (direction) {
                case 'up':
                    head.y -= cellSize;
                    break;
                case 'down':
                    head.y += cellSize;
                    break;
                case 'left':
                    head.x -= cellSize;
                    break;
                case 'right':
                    head.x += cellSize;
                    break;
            }
            snake.unshift(head);
            if (head.x === food.x && head.y === food.y) {
                food = { x: Math.floor(Math.random() * (canvas.width / cellSize)) * cellSize, y: Math.floor(Math.random() * (canvas.height / cellSize)) * cellSize };
            } else {
                snake.pop();
            }
        }

        function checkCollision() {
            const head = snake[0];
            if (head.x < 0 || head.x >= canvas.width || head.y < 0 || head.y >= canvas.height) {
                return true;
            }
            for (let i = 1; i < snake.length; i++) {
                if (snake[i].x === head.x && snake[i].y === head.y) {
                    return true;
                }
            }
            return false;
        }

        document.addEventListener('keydown', (event) => {
            switch (event.key) {
                case 'ArrowUp':
                    if (direction!== 'down') {
                        direction = 'up';
                    }
                    break;
                case 'ArrowDown':
                    if (direction!== 'up') {
                        direction = 'down';
                    }
                    break;
                case 'ArrowLeft':
                    if (direction!== 'right') {
                        direction = 'left';
                    }
                    break;
                case 'ArrowRight':
                    if (direction!== 'left') {
                        direction = 'right';
                    }
                    break;
            }
        });

        function gameLoop() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            moveSnake();
            if (checkCollision()) {
                alert('游戏结束！');
                location.reload();
            }
            drawSnake();
            drawFood();
            requestAnimationFrame(gameLoop);
        }

        gameLoop();
    </script>
</body>

</html>